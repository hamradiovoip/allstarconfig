package org.allstar.config.data;

public class ExtensionsData {
    String node ="";
	StringBuffer s;
	public String resultsStr = "none";

	/*
	 * 
	 */
	ExtensionsData()
	{


	}

	
	/*
	 * 
	 */
	public String	buildExtension() 
	{


		s = new StringBuffer("; Autogenerated extension.conf file\n");

		s.append(" [general]\n" + 
				"\n" + 
				"			static = yes       ; These two lines prevent the command-line interface\n" + 
				"			writeprotect = yes ; from overwriting the config file. Leave them here.\n" + 
				"\n" + 
				"			[globals]\n" + 
				"			HOMENPA = 999 ; change this to your Area Code\n" + 
				"			NODE = "+this.node+"   ; change this to your node number\n" + 
				"\n" + 
				"			[default]\n" + 
				"\n" + 
				"			exten => i,1,Hangup\n" + 
				"\n" + 
				"			[radio-secure]\n" + 
				"			exten => ${NODE},1,rpt,${NODE}\n" + 
				"\n" + 
				"			[iaxrpt]                                ; entered from iaxrpt in iax.conf\n" + 
				"			exten => ${NODE},1,rpt(${NODE}|X)       ; NODE is the Name field in iaxrpt\n" + 
				"			                                        ; Info: The X option passed to the Rpt application\n" + 
				"			                                        ; disables the normal security checks.\n" + 
				"			                                        ; Because incoming connections are validated in iax.conf,\n" + 
				"			                                        ; and we don't know where the user will be coming from in advance,\n" + 
				"			                                        ; the X option is required.\n" + 
				"	\n");
		s.append("[iax-client]                            ; for IAX VIOP clients.\n" + 
				"	exten => ${NODE},1,Ringing\n" + 
				"	exten => ${NODE},n,Wait(3)\n" + 
				"	exten => ${NODE},n,Answer\n" + 
				"	exten => ${NODE},n,Set(NODENUM=${CALLERID(number)})\n" + 
				"	exten => ${NODE},n,Playback(rpt/node|noanswer)\n" + 
				"	exten => ${NODE},n,SayDigits(${EXTEN})\n" + 
				"	exten => ${NODE},n,Set(CALLERID(num)=0)\n" + 
				"	exten => ${NODE},n,Rpt,${NODE}|P|${CALLERID(name)}\n" + 
				"	exten => ${NODE},n,Hangup\n" + 
				"	exten => ${NODE},n(hangit),Answer\n" + 
				"	exten => ${NODE},n(hangit),Wait(1)\n" + 
				"	exten => ${NODE},n(hangit),Hangup\n" + 
				"\n" + 
				"	; Comment-out the following clause if you want Allstar Autopatch service \n");
		s.append(" [pstn-out]\n" + 
				"	exten = _NXXNXXXXXX,1,playback(ss-noservice)\n" + 
				"	exten = _NXXNXXXXXX,2,Congestion\n" + 
				"\n" + 
				"	; Un-comment out the following clause if you want Allstar Autopatch service\n" + 
				"	;[pstn-out]\n" + 
				"	;exten = _NXXNXXXXXX,1,Dial(IAX2/allstar-autopatch/\\${EXTEN})\n" + 
				"	;exten = _NXXNXXXXXX,2,Busy\n" + 
				"\n" + 
				"	[invalidnum]\n" + 
				"	exten = s,1,Wait,3\n" + 
				"	exten = s,n,Playback,ss-noservice\n" + 
				"	exten = s,n,Wait,1\n" + 
				"	exten =  s,n,Hangup\n");
		s.append(" \n" + 
				"	\n" + 
				"	[radio]\n" + 
				"			exten = _X11,1,Goto(check_route|${EXTEN}|1);\n" + 
				"			exten = _NXXXXXX,1,Goto(check_route|1${HOMENPA}${EXTEN}|1)\n" + 
				"			exten = _1XXXXXXXXXX,1,Goto(check_route|${EXTEN}|1)\n" + 
				"			exten = _07XX,1,Goto(parkedcalls|${EXTEN:1}|1)\n" + 
				"			exten = 00,1,Goto(my-ip|s|1)\n" + 
				"\n" + 
				"			[check_route]\n" + 
				"			exten =_X.,1,Noop(${EXTEN})\n" + 
				"			; no 800\n" + 
				"			exten = _1800NXXXXXX,2,Goto(invalidnum|s|1)\n" + 
				"			exten = _1888NXXXXXX,2,Goto(invalidnum|s|1)\n" + 
				"			exten = _1877NXXXXXX,2,Goto(invalidnum|s|1)\n" + 
				"			exten = _1866NXXXXXX,2,Goto(invalidnum|s|1)\n" + 
				"			exten = _1855NXXXXXX,2,Goto(invalidnum|s|1)\n" + 
				"			; no X00 NPA\n" + 
				"			exten = _1X00XXXXXXX,2,Goto(invalidnum|s|1)\n" + 
				"			; no X11 NPA\n" + 
				"			exten = _1X11XXXXXXX,2,Goto(invalidnum|s|1)\n" + 
				"			; no X11\n" + 
				"			exten = _X11,2,Goto(invalidnum|s|1)\n" + 
				"			; no 555 Prefix in any NPA\n" + 
				"			exten = _1NXX555XXXX,2,Goto(invalidnum|s|1)\n" + 
				"			; no 976 Prefix in any NPA\n" + 
				"			exten = _1NXX976XXXX,2,Goto(invalidnum|s|1)\n" + 
				"			; no NPA=809\n" + 
				"			exten = _1809XXXXXXX,2,Goto(invalidnum|s|1)\n" + 
				"			; no NPA=900\n" + 
				"			exten = _1900XXXXXXX,2,Goto(invalidnum|s|1)\n" + 
				"\n" + 
				"			; okay, route it\n" + 
				"			exten = _1NXXXXXXXXX,2,Goto(pstn-out|${EXTEN:1}|1)\n" + 
				"			exten = _X.,2,Goto(invalidnum|s|1)\n" + 
				"\n" + 
				"			[my-ip]\n" + 
				"			exten = s,1,Set(MYADDR=${CURL(http://myip.vg)})\n" + 
				"			exten = s,2,Wait,1\n" + 
				"			exten = s,3,SayAlpha(${MYADDR})\n" + 
				"			exten = s,4,Hangup\n" + 
				"\n" + 
				"			[allstar-sys]\n" + 
				"			exten => _1.,1,Rpt(${EXTEN:1}|Rrpt/node:NODE:rpt/in-call:digits/0:PARKED|120)\n" + 
				"			exten => _1.,n,Hangup\n" + 
				"\n" + 
				"\n" + 
				"	\n" + 
				"	\n" + 
				"	\n" + 
				"	\n" + 
				"	exten => _3.,1,Ringing\n" + 
				"			exten => _3.,n,Wait(3)\n" + 
				"			exten => _3.,n,Answer\n" + 
				"			exten => _3.,n,Playback(rpt/node)\n" + 
				"			exten => _3.,n,Saydigits(${EXTEN:1})\n" + 
				"			exten => _3.,n,Rpt(${EXTEN:1}|Pv|${CALLERID(name)}-P)\n" + 
				"			exten => _3.,n,Hangup\n" + 
				"\n" + 
				"			exten => _4.,1,Ringing\n" + 
				"			exten => _4.,n,Wait(3)\n" + 
				"			exten => _4.,n,Answer\n" + 
				"			exten => _4.,n,Playback(rpt/node)\n" + 
				"			exten => _4.,n,Saydigits(${EXTEN:1})\n" + 
				"			exten => _4.,n,Rpt(${EXTEN:1}|D|${CALLERID(name)}-P)\n" + 
				"			exten => _4.,n,Hangup\n" + 
				"\n" + 
				"			exten => _5.,1,Ringing\n" + 
				"			exten => _5.,n,Wait(3)\n" + 
				"			exten => _5.,n,Answer\n" + 
				"			exten => _5.,n,Playback(rpt/node)\n" + 
				"			exten => _5.,n,Saydigits(${EXTEN:1})\n" + 
				"			exten => _5.,n,Rpt(${EXTEN:1}|Dv|${CALLERID(name)}-P)\n" + 
				"			exten => _5.,n,Hangup\n" + 
				"\n" + 
				"			[allstar-public]\n" + 
				"\n" + 
				"			exten => s,1,Ringing\n" + 
				"			exten => s,n,Set(RESP=${CURL(https://register.allstarlink.org/cgi-bin/authwebphone.pl?${CALLERID(name)})})\n" + 
				"			exten => s,n,Set(NODENUM=${CALLERID(number)})\n" + 
				"			exten => s,n,GotoIf($[\"${RESP:0:1}\" = \"?\"]?hangit)\n" + 
				"			exten => s,n,GotoIf($[\"${RESP:0:1}\" = \"\"]?hangit)\n" + 
				"			exten => s,n,GotoIf($[\"${RESP:0:5}\" != \"OHYES\"]?hangit)\n" + 
				"			exten => s,n,Set(CALLSIGN=${RESP:5})\n" + 
				"			exten => s,n,Wait(3)\n" + 
				"			exten => s,n,Playback(rpt/node|noanswer)\n" + 
				"			exten => s,n,Saydigits(${NODENUM})\n" + 
				"			exten => s,n,Set(CALLERID(name)=${CALLSIGN})\n" + 
				"			exten => s,n,Set(CALLERID(num)=0)\n" + 
				"			exten => s,n,Rpt(${NODENUM}|X)\n" + 
				"			exten => s,n,Hangup\n" + 
				"			exten => s,n(hangit),Answer\n" + 
				"			exten => s,n(hangit),Wait(1)\n" + 
				"			exten => s,n(hangit),Hangup\n" + 
				"\n" + 
				"			#includeifexists custom/extensions.conf\n");
		s.append(" \n");



		this.resultsStr= s.toString();
		return(resultsStr);
	}

}
